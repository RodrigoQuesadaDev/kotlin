package

package a {
    private var x: kotlin.Int
    private fun bar(): kotlin.Unit
    private fun foo(): kotlin.Unit
    internal fun makeA(): a.A
    internal fun test(): kotlin.Unit

    private open class A {
        public constructor A()
        internal final fun bar(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class B : a.A {
        public constructor B()
        invisible_fake final override /*1*/ /*fake_override*/ fun bar(): kotlin.Unit
        invisible_fake open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        invisible_fake open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        invisible_fake open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    private object PO {
        private constructor PO()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class Q {
        public constructor Q()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        internal final class W {
            public constructor W()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            internal final fun foo(): kotlin.Unit
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
